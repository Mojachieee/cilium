name: IPsec key rotation test
description: Rotates keys and checks that established connections are not interrupted
inputs:
  key-type:
    required: true
    description: "IPsec key authentication algorithm"
  extra-connectivity-test-flags:
    required: false
    description: "Connectivity tests extra flags"
runs:
  using: composite
  steps:
    - name: Rotate IPsec Key & Test
      uses: ./.github/actions/conn-disrupt-test
      with:
        job-name: conformance-ipsec-e2e-key-rotation
        extra-connectivity-test-flags: ${{ inputs.extra-connectivity-test-flags }}
        operation-cmd: |
          echo "Rotating IPsec key"
          ./cilium-cli encryption rotate-key --auth-algo ${{ inputs.key-type }}

          # Wait until key rotation starts
          while true; do
            one_key_node_count=$(./cilium-cli encryption status -o json | jq '."ipsec-keys-in-use-node-count"."1"')
            if [[ "$one_key_node_count" == "null" ]]; then
              break
            fi
            echo "Waiting until key rotation starts (seeing 1 active key on $one_key_node_count nodes)"
            sleep 30s
          done

          # Wait until key rotation completes
          # By default the key rotation cleanup delay is 5min, let's sleep 4min before actively polling
          sleep $((4*60))
          while true; do
            two_keys_node_count=$(./cilium-cli encryption status -o json | jq '."ipsec-keys-in-use-node-count"."2"')
            if [[ "$two_keys_node_count" == "null" ]]; then
              break
            fi
            echo "Waiting until key rotation completes (seeing 2 active keys on $two_keys_node_count nodes)"
            sleep 30s
          done
